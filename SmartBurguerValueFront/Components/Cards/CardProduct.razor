@using DTOs
@using DTOs.Analysis
@inject NavigationManager _nav

@if (ItemProduct != null)
{
    <div class="card-product-container d-flex flex-column" @onclick="NavToDetailProduct">
        @if (!string.IsNullOrEmpty(ItemProduct?.ImageUrl))
        {
            <img src="@ItemProduct.ImageUrl"
                 alt="Produto"
                 style="width:100%; max-height:200px; object-fit:cover; border-radius:12px 12px 0 0;" />
        }
        else
        {
            <div style="width:100%; aspect-ratio:16/9; background:#ccc; border-radius:12px 12px 0 0;"></div>
        }
        <div class="d-flex flex-column justify-content-between py-2 px-3 flex-grow-1">
            <h1 class="title-product-card">@ItemProduct.Name</h1>
            <div class="d-flex flex-row justify-content-between">
                <p class="description-value">Valor</p>
                <p class="value-product">R$ @ItemProduct.SellingPrice</p>
            </div>
        </div>
    </div>
}
@if (ItemCombo != null)
{
    <div class="card-product-container d-flex flex-column" @onclick="NavToDetailCombo">
        @if (!string.IsNullOrEmpty(ItemCombo?.ImageUrl))
        {
            <img src="@ItemCombo.ImageUrl"
                 alt="Produto"
                 style="width:100%; max-height:200px; object-fit:cover; border-radius:12px 12px 0 0;" />
        }
        else
        {
            <div style="width:100%; aspect-ratio:16/9; background:#ccc; border-radius:12px 12px 0 0;"></div>
        }
        <div class="d-flex flex-column justify-content-between py-2 px-3 flex-grow-1">
            <h1 class="title-product-card">@ItemCombo.Name</h1>
            <div class="d-flex flex-row justify-content-between">
                <p class="description-value">Valor</p>
                <p class="value-product">R$ @ItemCombo.SellingPrice</p>
            </div>
        </div>
    </div>
}
@if(ItemHome != null)
{
    <div class="card-product-container d-flex flex-column" @onclick="NavToDetailProductHome">
        @if (!string.IsNullOrEmpty(ItemHome?.ImageUrl))
        {
            <img src="@ItemHome.ImageUrl"
                 alt="Produto"
                 style="width:100%; max-height:200px; object-fit:cover; border-radius:12px 12px 0 0;" />
        }
        else
        {
            <div style="width:100%; aspect-ratio:16/9; background:#ccc; border-radius:12px 12px 0 0;"></div>
        }

        <div class="d-flex flex-column justify-content-between py-2 px-3 flex-grow-1">
            <h1 class="title-product-card">@ItemHome.Name</h1>
            <div class="d-flex flex-row justify-content-between">
                <p class="description-value"><i class="fa fa-shopping-cart"></i>@ItemHome.Quantity</p>
                <p class="value-product">R$ @ItemHome.SellingPrice</p>
            </div>
        </div>
    </div>

}
@code {
    [Parameter]
    public ProductsDTO ItemProduct { get; set; }
    [Parameter]
    public ComboDTO ItemCombo { get; set; }
    [Parameter]
    public BestSellingProductsDTO ItemHome { get; set; }

    private void NavToDetailProduct()
    {
        if (ItemProduct != null)
        {
            _nav.NavigateTo($"/produtos/detalhe/{ItemProduct.Id}");
        }
    }
    private void NavToDetailProductHome()
    {
        if (ItemProduct != null)
        {
            _nav.NavigateTo($"/produtos/detalhe/{ItemHome.ProductId}");
        }
    }
    private void NavToDetailCombo()
    {
        if (ItemCombo != null)
        {
            _nav.NavigateTo($"/combos/detalhe/{ItemCombo.Id}");
        }
    }
}
