
@page "/login"
@using Microsoft.AspNetCore.Components.Authorization
@using Radzen
@using Radzen.Blazor
@using SmartBurguerValueFront.Requests;
@using SmartBurguerValueFront.Services;
@inject AuthService Auth
@inject NavigationManager _nav
@layout LayoutPublic

<div class="w-100 vh-100 d-flex flex-column justify-content-center align-items-center"
     style="background-image: url('img/bg-login.png');
            background-size: cover;
            background-position: center center;
            background-repeat: no-repeat;">
    <div class="bg-white rounded shadow p-4" style="min-width: 320px; border-radius:12px;">
        <RadzenStack Orientation="Orientation.Vertical" Gap="1rem">
            <h3 class="text-center mb-0">LOGIN</h3>
            <h4 class="text-orange m-3">SMART BURGUER VALUE</h4>
            @if (!string.IsNullOrEmpty(error))
            {
                <RadzenAlert Severity="AlertSeverity.Error" Summary="Erro" Detail="@error" />
            }

            <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                <div class="d-flex flex-column justify-content-center gap-4">
                    <RadzenFormField Text="Usuário" Variant="@variant">
                        <RadzenTextBox @bind-Value="loginModel.UserName" Name="Nome do Usuário" Style="width: 100%;" />
                    </RadzenFormField>

                    <RadzenFormField Text="Senha" Variant="@variant">
                        <RadzenPassword @bind-Value="loginModel.UserPassword" Name="Password" Style="width: 100%;" />
                    </RadzenFormField>

                    <RadzenButton Text="Entrar" ButtonType="ButtonType.Submit" Icon="login" Style="width: 100%;" />
                </div>
            </EditForm>
        </RadzenStack>
    </div>
</div>

@code {
    private LoginRequest loginModel = new();
    private string error;

    Variant variant = Variant.Outlined;

    private async Task HandleLogin()
    {
        
        var success = await Auth.Login(loginModel);
        if (!success)
        {
            error = "Login falhou. Verifique o e-mail e a senha.";
        }
        else
        {
            _nav.NavigateTo("/", forceLoad: true);
        }
    }
}
