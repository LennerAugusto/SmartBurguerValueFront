@page "/"
@using ApexCharts
@using Microsoft.AspNetCore.Components.Authorization
@using SmartBurguerValueFront.Components.Cards
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Home</PageTitle>

<div class="p-2 p-md-4">
    <h4 class="text-dark">Dashboard</h4>
    <p style="color:var(--grey-30)">Olá @userName, bem-vindo de volta!</p>
    <div class="row">
        <div class="col-12 col-md-3 mb-3">
            <SumaryCardHome UrlIcon="img/icons/receipt.webp" TitleCard="Total de Pedidos" Number="10" />
        </div>
        <div class="col-12 col-md-3 mb-3">
            <SumaryCardHome UrlIcon="img/icons/users.webp" TitleCard="Total em Gastos" Number="R$5000" />
        </div>
        <div class="col-12 col-md-3 mb-3">
            <SumaryCardHome UrlIcon="img/icons/dollar.webp" TitleCard="Total em Vendas" Number="R$12.730" />
        </div>
    </div>
</div>

<DemoContainer>
<ApexChart TItem="Order"
           Title="Basic Sample">

    <ApexPointSeries TItem="Order"
                Items="orders"
                 SeriesType="@SeriesType.Area"
                Name="Gross Value"
                XValue="@(e => e.Country)"
                YAggregate="@(e => e.Sum(e => e.GrossValue))"
                OrderByDescending="e=>e.Y" />

    <ApexPointSeries TItem="Order"
                Items="orders"
                 SeriesType="@SeriesType.Area"
                Name="Net Value"
                XValue="@(e => e.Country)"
                YAggregate="@(e => e.Sum(e => e.NetValue))"
                OrderByDescending="e=>e.Y" />
</ApexChart>
</DemoContainer>


@code {
    private string? userName;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            userName = user.Identity.Name;
        }
    }
    public class Order
    {
        public string Country { get; set; } = string.Empty;
        public decimal GrossValue { get; set; }
        public decimal NetValue { get; set; }
    }

    private List<Order> orders = new()
    {
        new Order { Country = "Brasil", GrossValue = 1000, NetValue = 850 },
        new Order { Country = "EUA", GrossValue = 1500, NetValue = 1400 },
        new Order { Country = "Alemanha", GrossValue = 800, NetValue = 700 },
        new Order { Country = "Japão", GrossValue = 1200, NetValue = 950 }
    };
}
